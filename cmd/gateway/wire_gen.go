// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"im/api/pb"
	"im/internal/gateway/conn"
	"im/internal/gateway/data"
	"im/internal/gateway/handler"
	"im/internal/gateway/server"
	"im/internal/gateway/service"
	"im/pkg/etcd"
)

// Injectors from wire.go:

func wireApp(gateWayConf *pb.GateWayConf, pbData *pb.Data, logger log.Logger) (*kratos.App, func(), error) {
	manager := conn.NewManager(logger)
	gateWayService := service.NewGateWayService(manager, logger)
	grpcServer := server.NewGRPCServer(gateWayConf, gateWayService)
	discovery := etcd.NewDiscovery(pbData)
	msgClient := data.NewMsgServiceClient(discovery)
	dataData := data.NewData(msgClient)
	wsHandler := handler.NewWsHandler(gateWayConf, manager, logger, dataData)
	httpServer := server.NewHTTPServer(gateWayConf, wsHandler)
	registrar := etcd.NewRegister(pbData)
	app := newApp(grpcServer, httpServer, logger, registrar)
	return app, func() {
	}, nil
}
