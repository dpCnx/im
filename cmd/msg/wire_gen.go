// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"im/api/pb"
	"im/internal/msg/data"
	"im/internal/msg/server"
	"im/internal/msg/service"
	"im/pkg/etcd"
	"im/pkg/rabbitmq"
)

// Injectors from wire.go:

func wireApp(msgConfig *pb.MsgConfig, pbData *pb.Data, logger log.Logger) (*kratos.App, func(), error) {
	rabbitmqRabbitmq, err := rabbitmq.NewRabbitmq(pbData)
	if err != nil {
		return nil, nil, err
	}
	msgRabbitmq := rabbitmq.NewMsgRabbitmq(rabbitmqRabbitmq, pbData)
	dataData, err := data.NewData(msgRabbitmq, logger)
	if err != nil {
		return nil, nil, err
	}
	msgService := service.NewMsgService(logger, dataData)
	grpcServer := server.NewGRPCServer(msgConfig, msgService)
	registrar := etcd.NewRegister(pbData)
	app := newApp(grpcServer, logger, registrar)
	return app, func() {
	}, nil
}
